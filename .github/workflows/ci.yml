name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    # services:
    #   mysql:
    #     image: mysql:8
    #     env:
    #       MYSQL_ROOT_PASSWORD: ${{ secrets.DB_PASSWORD }}
    #       MYSQL_DATABASE: ecommerce
    #     ports:
    #       - 3307:3306
    env:
      NODE_ENV: test
      DOCKER_ENV: false
      RESEND_API_KEY: ${{ secrets.RESEND_API_KEY }}
      LOCATIONIQ_API_KEY: ${{ secrets.LOCATIONIQ_KEY }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20
      - name: Inject .env.production for Playwright
        run: |
          echo "BASE_URL=http://localhost:3000" >> .env.production
          echo "CHAT_URL=http://localhost:3001/chat" >> .env.production
          echo "MOCKOON_URL=http://localhost:4000" >> .env.production
          echo "NEXT_PUBLIC_MOCKOON_URL=http://localhost:4000" >> .env.production
          echo "NEXT_PUBLIC_APP_ENV=production" >> .env.production
          # echo "DB_HOST=mysql" >> .env.production
          # echo "DB_PORT=3307" >> .env.production
          # echo "DB_USER=root" >> .env.production
          # echo "DB_NAME=ecommerce" >> .env.production
          # echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env.production

      - name: Install dependencies
        run: npm install

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Install Allure CLI
        run: npm install -g allure-commandline

      - name: Install Mockoon CLI
        run: npm install -g @mockoon/cli
      
      - name: List auth files
        run: ls -la auth*.json

      - name: Start Mockoon
        run: |
          mockoon-cli start --data ./mockoon.json --port 4000 &
          sleep 5

      - name: Wait for Mockoon to be ready
        run: |
          for i in {1..10}; do
            curl --silent -X POST http://localhost:4000/pay \
              -H "Content-Type: application/json" \
              -d '{"amount":1}' && break
            echo "Waiting for Mockoon..."
            sleep 2
          done
      
      - name: Init submodules
        run: git submodule update --init --recursive

      - name: Start TechMart Chatbot
        run: |
          cd ./chatbot/server
          npm install
          npx ts-node index.ts &
          sleep 5


      - name: Clean previous build
        run: rm -rf .next

      - name: Build Next.js app
        run: npm run build

      - name: Start server and run Playwright tests
        run: |
          npm run start & 
          npx wait-on http://localhost:3000 --timeout=60000
          # check app health
          curl -f http://localhost:3000 || (echo "App crashed!" && exit 1)
          # run tests
          npx playwright test --project=User --project=Admin
          continue-on-error: true


      # - name: Start Next.js server
      #   run: npm run start &

      # - name: Wait for dev server
      #   run: npx wait-on http://localhost:3000 --timeout=60000
      
      # # - name: Buffer before tests
      # #   run: sleep 10

      # - name: Run Playwright tests
      #   run: npx playwright test --project=User --project=Admin
      #   continue-on-error: true

      - name: Upload Playwright artifacts
        uses: actions/upload-artifact@v4
        with:
          name: playwright-results
          path: test-results/

      - name: List test results
        run: ls -la ./allure-results

      - name: Generate Allure report
        run: npx allure generate ./allure-results --clean -o ./allure-report

      - name: Upload Allure report as artifact
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: allure-report
      
      - name: Summary
        run: echo "âœ… CI completed. Check Allure and Playwright artifacts for results."