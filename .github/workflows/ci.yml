name: CI Pipeline

env:
  RESEND_API_KEY: ${{ secrets.RESEND_API_KEY }}
  DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
  NEXT_PUBLIC_LOCATIONIQ_KEY: ${{ secrets.LOCATIONIQ_KEY }}
  JWT_SECRET: ${{ secrets.JWT_SECRET }}

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      DOCKER_ENV: true
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install dependencies
        run: npm install

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Install Allure CLI
        run: npm install -g allure-commandline --save-dev

      - name: Install Mockoon CLI
        run: npm install -g @mockoon/cli

      - name: Start Mockoon
        run: |
            mockoon-cli start --data ./mockoon.json --port 4000 &
            sleep 5

      - name: Wait for Mockoon to be ready
        run: |
          for i in {1..10}; do
            curl --silent -X POST http://localhost:4000/pay \
              -H "Content-Type: application/json" \
              -d '{"amount":1}' && break
            echo "Waiting for Mockoon..."
            sleep 2
            done

      - name: Run Playwright tests
        run: npx playwright test
        continue-on-error: true

      - name: Generate Allure report
        run: npx allure generate ./allure-results --clean -o ./allure-report

      - name: Upload Allure report as artifact
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: allure-report

  docker:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: yazbakm/techmart:latest
          build-args: |
            RESEND_API_KEY=${{ secrets.RESEND_API_KEY }}
            DB_PASSWORD=${{ secrets.DB_PASSWORD }}
            LOCATIONIQ_KEY=${{ secrets.LOCATIONIQ_KEY }}
            JWT_SECRET=${{ secrets.JWT_SECRET }}